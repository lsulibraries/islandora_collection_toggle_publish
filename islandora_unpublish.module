<?php

defined("ISLANDORA_UNPUBLISH_ADMINISTER_UNPUBLISHED") ? NULL : define("ISLANDORA_UNPUBLISH_ADMINISTER_UNPUBLISHED", 'Administer published/unpublished collection setting.');

/**
 * Implements hook_permission().
 */
function islandora_unpublish_permission() {
  return array(
    ISLANDORA_UNPUBLISH_ADMINISTER_UNPUBLISHED => array(
      'title' => t('Administer unpublished collection setting.'),
      'description' => t("Administer unpublished collection setting"),
    ),
  );
}

/**
 * Implements hook_form_islandora_object_properties_form_alter().
 */
function islandora_unpublish_form_islandora_object_properties_form_alter(array &$form, array &$form_state) {
  $form['islandora_unpublish_is_published'] = array(
    '#type' => 'checkbox',
    '#title' => 'Publish',
    '#description' => t('Check this to make the collection available to the public.'),
    '#default_value' => islandora_unpublish_collection_is_published($form['pid']['#value']) ? TRUE : FALSE,
  );
  array_unshift($form['#submit'], 'islandora_unpublish_properties');
}

function islandora_unpublish_properties($form, &$form_state) {
  $submitted = $form_state['values']['islandora_unpublish_is_published'];
  if ($submitted != islandora_unpublish_collection_is_published($form_state['values']['pid'])) {
    $submitted ? islandora_unpublish_publish_collection($form_state['values']['pid']) : islandora_unpublish_unpublish_collection($form_state['values']['pid']);
  }
}

function islandora_unpublish_collection_is_published ($pid) {
  $records = db_select('islandora_unpublish_collections', 'c')
    ->fields('c', array('pid'))
    ->condition('pid', $pid)
    ->execute();
  $unpublished = $records->rowCount();
  return !$unpublished;
}


function islandora_unpublish_unpublish_collection ($pid) {
  db_insert('islandora_unpublish_collections')
  ->fields(array('pid' => $pid))
  ->execute();
}

function islandora_unpublish_publish_collection ($pid) {
  db_delete('islandora_unpublish_collections')
  ->condition('pid', $pid)
  ->execute();
}

/**
 * Implements hook_islandora_object_access().
 *
 * Checks for an IP address embargo and handles redirects if necessary.
 */
function islandora_unpublish_islandora_object_access($op, $islandora_object, $user) {

  $relationships = $islandora_object->relationships->get();
  if (is_collection($islandora_object)) {
    $pid = $islandora_object->id;
  }
  else {
    $pid = get_parent_collection($islandora_object);
  }
  return islandora_unpublish_collection_is_published($pid) || user_access(ISLANDORA_UNPUBLISH_ADMINISTER_UNPUBLISHED) ? NULL : FALSE;
}

/**
 * Implements hook_islandora_object_access().
 *
 * Checks for an IP address embargo and handles redirects if necessary.
 */
function islandora_unpublish_islandora_datastream_access($op, $islandora_ds, $user) {

  if (is_collection($islandora_ds->parent)) {
    $pid = $islandora_ds->parent->id;
  }
  else {
    $pid = get_parent_collection($islandora_ds->parent);
  }
  return islandora_unpublish_collection_is_published($pid) || user_access(ISLANDORA_UNPUBLISH_ADMINISTER_UNPUBLISHED) ? NULL : FALSE;
}

/**
 * 
 * @param type $islandora_object
 * @return boolean
 */
function is_collection($islandora_object) {
  $models = $islandora_object->relationships->get('info:fedora/fedora-system:def/model#', 'hasModel');
  foreach ($models as $model) {
    if ($model['object']['value'] === "islandora:collectionCModel") {
      return TRUE;
    }
  }
  return FALSE;
}

function get_parent_collection ($islandora_object) {
  $rels = $islandora_object->relationships->get("info:fedora/fedora-system:def/relations-external#", "isMemberOfCollection");
  foreach ($rels as $collection) {
      return $collection['object']['value'];
  }
}
